{"version":3,"sources":["logo.svg","components/Notifier.js","utils/setAuthToken.js","actions/authActions.js","actions/types.js","components/NavBar.js","components/Login.js","components/Register.js","components/NavNewsFeed.js","components/FollowMe.js","components/CreatePost.js","components/PostHeader.js","components/Comment.js","components/Post.js","components/Feed.js","components/Welcome.js","reducers/authReducer.js","reducers/snackbarReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","openSnackbarFn","setAuthToken","token","axios","defaults","headers","common","openSnackbar","_ref2","message","Notifier","state","open","varient","_ref","_this","setState","closeSnackbar","this","react_default","a","createElement","id","dangerouslySetInnerHTML","__html","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","SnackbarContentProps","aria-describedby","Component","setCurrentUser","userData","dispatch","type","payload","NavBar","anchorEl","mobileMoreAnchorEl","handleProfileMenuOpen","event","currentTarget","handleMenuClose","handleMobileMenuClose","handleMobileMenuOpen","logoutUser","props","isAuthenticated","auth","_this$state","classes","isMenuOpen","Boolean","isMobileMenuOpen","renderMenu","Menu_default","transformOrigin","MenuItem_default","onClick","renderMobileMenu","IconButton_default","color","Badge_default","badgeContent","Mail_default","Notifications_default","AccountCircle_default","renderIfAuthenticated","AppBar_default","position","Toolbar_default","className","menuButton","aria-label","icons_Menu_default","Typography_default","title","variant","noWrap","search","searchIcon","Search_default","InputBase_default","placeholder","root","inputRoot","input","inputInput","grow","sectionDesktop","aria-owns","undefined","aria-haspopup","sectionMobile","MoreVert_default","React","connect","openSnackBar","localStorage","removeItem","window","location","href","withStyles","theme","width","flexGrow","marginLeft","marginRight","Object","defineProperty","display","breakpoints","up","borderRadius","shape","backgroundColor","fade","palette","white","&:hover","spacing","unit","height","pointerEvents","alignItems","justifyContent","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","emailRegex","RegExp","Login","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onSubmit","e","preventDefault","valid","_","forOwn","user","value","key","length","filteredErrors","filter","formErrors","o","invalid","size","objectSpread","console","log","history","loginUser","handleChange","_e$target","target","name","email","test","password","handleArrowRef","node","arrowRef","onFocusChange","onBlurChange","touched","push","Grid_default","container","item","xs","sm","gutterBottom","style","marginTop","Button_default","fullWidth","FormControl_default","text","InputLabel_default","htmlFor","Input_default","error","onChange","onFocus","onBlur","noValidate","Tooltip_default","popper","bootstrapPopper","tooltip","bootstrapTooltip","tooltipPlacementRight","bootstrapPlacementRight","PoppersProps","popperOptions","modifiers","arrow","enabled","element","placement","disableFocusListener","disableHoverListener","disableTouchListener","Fragment","ref","top","right","button","Link_default","component","RouterLink","to","snackbar","post","then","res","data","success","setItem","JSON","stringify","catch","err","paper","textAlign","control","padding","fontSize","&::before","content","margin","borderStyle","black","&[x-placement*=\"bottom\"] $arrow","left","borderWidth","borderColor","concat","&[x-placement*=\"top\"] $arrow","bottom","marginBottom","&[x-placement*=\"right\"] $arrow","&[x-placement*=\"left\"] $arrow","bootstrapPlacementLeft","bootstrapPlacementTop","bootstrapPlacementBottom","usernameRegex","Register","usernameMessage","usernameInvalid","username","passwordInvalid","passwordMessage","confirmPassword","confirmMessage","confirmInvalid","newUser","registerUser","loading","redirect","ConfirmPassword","Fade_default","in","LinearProgress_default","NavNewsFeed","handleClick","List_default","subheader","ListSubheader_default","ListItem_default","ListItemIcon_default","Send_default","ListItemText_default","inset","primary","Drafts_default","MoveToInbox_default","ExpandLess_default","ExpandMore_default","Collapse_default","timeout","unmountOnExit","disablePadding","nested","StarBorder_default","maxWidth","background","FollowMe","alignment","formats","ListItemAvatar_default","Avatar_default","alt","src","index_es","ToggleButtonGroup_default","handleFormat","ToggleButton_default","Close_default","inline","CreatePost","TextField_default","multiline","rows","rowsMax","float","viewBox","fill","d","Icon_default","rightIcon","leftIcon","iconSmall","options","PostHeader","handleClose","_this2","avatar","PaperProps","maxHeight","ITEM_HEIGHT","map","option","selected","bigAvatar","Comment","Post","postContent","components_PostHeader","postContainer","linedivider","components_Comment","borderTop","border","overflow","img","Feed","layout","Hidden_default","only","components_NavNewsFeed","components_CreatePost","components_Post","components_FollowMe","Welcome","initialState","combineReducers","arguments","action","isEmpty","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","__REDUX_DEVTOOLS_EXTENSION__","App","es","react_router_dom","components_NavBar","react_router","exact","path","components_Notifier","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.928faf5c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nlet openSnackbarFn;\nclass Notifier extends Component {\n    state = {\n        open:false,\n        varient:'success',\n        message:''\n    };\n\n\n    componentDidMount() {\n        openSnackbarFn = this.openSnackbar;\n    }\n\n\n\n    openSnackbar = ({message})=>{\n        this.setState({\n            open:true,\n            varient:'success',\n            message:message\n        })\n    };\n\n    closeSnackbar = ()=>{\n        this.setState({\n            open:false,\n            message:'',\n            varient:'success'\n        })\n    };\n\n    render() {\n        const message = (\n            <span\n                id=\"snackbar-message-id\"\n                dangerouslySetInnerHTML={{ __html: this.state.message }} />\n        );\n        return (\n            <Snackbar\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                message={message}\n                autoHideDuration={3000}\n                onClose={this.closeSnackbar}\n                open={this.state.open}\n                varient={this.state.varient}\n                SnackbarContentProps={{\n                    'aria-describedby': 'snackbar-message-id',\n                }}\n            />\n        );\n    }\n}\nexport function openSnackbar({ message }) {\n    openSnackbarFn({ message });\n}\n\nexport default Notifier;","import axios from 'axios';\n\nconst setAuthToken = token => {\n    if(token){\n        // apply to every request\n        axios.defaults.headers.common['Authorization'] = token\n    }else{\n        //delete auth header\n        delete axios.defaults.headers.common['Authorization']\n    }\n};\n\nexport default setAuthToken;","import {OPEN_SNACKBAR,  SET_CURRENT_USER} from './types';\nimport setAuthToken from '../utils/setAuthToken'\nimport axios from 'axios';\nimport {openSnackbar} from \"../components/Notifier\";\n\n\n//Register User\nexport const registerUser = (userData, history, openSnackbar) => dispatch =>{\n    axios.post(`/api/auth/register`, userData)\n        .then((res)=>{\n            if(res.data.success){\n                history.push('/login');\n            }\n            openSnackbar({ varient:'success',message: res.data.message });\n        })\n        .catch(err=>{\n            console.log(err);\n        })\n};\n\n//Login User\nexport const loginUser = (userData, history, openSnackbar) => dispatch =>{\n    axios.post(`/api/auth/login`, userData)\n        .then((res)=>{\n            if(res.data.success){\n                //save to localstorage\n                const { token } = res.data;\n                localStorage.setItem('token', token);\n                localStorage.setItem('user', JSON.stringify(res.data.data))\n                dispatch({\n                    type: SET_CURRENT_USER,\n                    payload:res.data.data\n                });\n               history.push('/feed');\n                openSnackbar({ varient:'success',message: res.data.message });\n            }else{\n                openSnackbar({ varient:'success',message: res.data.message });\n            }\n\n\n        })\n        .catch(err=>{\n            console.log(err);\n         })\n};\n\nexport const setCurrentUser = userData => dispatch =>{\n    dispatch({\n        type:SET_CURRENT_USER,\n        payload:userData\n    })\n};\n\nexport const logoutUser = (openSnackBar)=>dispatch => {\n\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setAuthToken(false);\n\n    dispatch(setCurrentUser({}));\n    window.location.href = '/login';\n    openSnackbar({ varient:'success',message: 'Logged Out Successfully!' });\n};","export const OPEN_SNACKBAR = 'OPEN_SNACKBAR';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { connect } from 'react-redux';\nimport { loginUser } from \"../actions/authActions\";\nimport { Link } from 'react-router-dom';\nimport { logoutUser } from '../actions/authActions'\nimport {openSnackbar} from \"./Notifier\";\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n    title: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing.unit * 2,\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing.unit * 3,\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        width: theme.spacing.unit * 9,\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n        width: '100%',\n    },\n    inputInput: {\n        paddingTop: theme.spacing.unit,\n        paddingRight: theme.spacing.unit,\n        paddingBottom: theme.spacing.unit,\n        paddingLeft: theme.spacing.unit * 10,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: 200,\n        },\n    },\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n});\n\nclass NavBar extends React.Component {\n    state = {\n        anchorEl: null,\n        mobileMoreAnchorEl: null,\n    };\n\n    handleProfileMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n        this.handleMobileMenuClose();\n    };\n\n    handleMobileMenuOpen = event => {\n        this.setState({ mobileMoreAnchorEl: event.currentTarget });\n    };\n\n    handleMobileMenuClose = () => {\n        this.setState({ mobileMoreAnchorEl: null });\n    };\n\n    logoutUser = ()=>{\n\n        this.props.logoutUser(openSnackbar);\n    };\n\n    render() {\n        const { isAuthenticated } = this.props.auth;\n        const { anchorEl, mobileMoreAnchorEl } = this.state;\n        const { classes } = this.props;\n        const isMenuOpen = Boolean(anchorEl);\n        const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n        const renderMenu = (\n            <Menu\n                anchorEl={anchorEl}\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n                open={isMenuOpen}\n                onClose={this.handleMenuClose}\n            >\n                <MenuItem onClick={this.handleMenuClose}>Profile</MenuItem>\n                <MenuItem onClick={this.handleMenuClose}>My account</MenuItem>\n            </Menu>\n        );\n\n        const renderMobileMenu = (\n            <Menu\n                anchorEl={mobileMoreAnchorEl}\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n                open={isMobileMenuOpen}\n                onClose={this.handleMenuClose}\n            >\n                <MenuItem onClick={this.handleMobileMenuClose}>\n                    <IconButton color=\"inherit\">\n                        <Badge badgeContent={4} color=\"secondary\">\n                            <MailIcon />\n                        </Badge>\n                    </IconButton>\n                    <p>Messages</p>\n                </MenuItem>\n                <MenuItem onClick={this.handleMobileMenuClose}>\n                    <IconButton color=\"inherit\">\n                        <Badge badgeContent={11} color=\"secondary\">\n                            <NotificationsIcon />\n                        </Badge>\n                    </IconButton>\n                    <p>Notifications</p>\n                </MenuItem>\n                <MenuItem onClick={this.handleProfileMenuOpen}>\n                    <IconButton color=\"inherit\">\n                        <AccountCircle />\n                    </IconButton>\n                    <p>Profile</p>\n                </MenuItem>\n            </Menu>\n        );\n\n        const renderIfAuthenticated = (\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Open drawer\">\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\n                        Material-UI\n                    </Typography>\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase\n                            placeholder=\"Search…\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                        />\n                    </div>\n                    <div className={classes.grow} />\n                    <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\n                        <a onClick={this.logoutUser}>Logout</a>\n\n                    </Typography>\n                    <div className={classes.sectionDesktop}>\n                        <IconButton color=\"inherit\">\n                            <Badge badgeContent={4} color=\"secondary\">\n                                <MailIcon />\n                            </Badge>\n                        </IconButton>\n                        <IconButton color=\"inherit\">\n                            <Badge badgeContent={17} color=\"secondary\">\n                                <NotificationsIcon />\n                            </Badge>\n                        </IconButton>\n                        <IconButton\n                            aria-owns={isMenuOpen ? 'material-appbar' : undefined}\n                            aria-haspopup=\"true\"\n                            onClick={this.handleProfileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <AccountCircle />\n                        </IconButton>\n                    </div>\n                    <div className={classes.sectionMobile}>\n                        <IconButton aria-haspopup=\"true\" onClick={this.handleMobileMenuOpen} color=\"inherit\">\n                            <MoreIcon />\n                        </IconButton>\n                    </div>\n                </Toolbar>\n            </AppBar>\n        );\n\n        return (\n            <div className={classes.root}>\n                {isAuthenticated && renderIfAuthenticated}\n                {renderMenu}\n                {renderMobileMenu}\n            </div>\n        );\n    }\n}\n\nconst MapStateToProps = (state)=>({\n    auth:state.auth\n});\n\nNavBar.propTypes = {\n    classes: PropTypes.object.isRequired,\n    logoutUser: PropTypes.func.isRequired,\n    auth:PropTypes.object.isRequired\n};\n\nexport default connect(MapStateToProps, { logoutUser })(withStyles(styles)(NavBar));\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport { connect } from 'react-redux';\nimport { loginUser } from \"../actions/authActions\";\n\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Link from '@material-ui/core/Link';\nimport {openSnackbar}  from \"./Notifier\";\nimport _ from 'lodash';\n\nconst emailRegex = RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n\nfunction arrowGenerator(color) {\n    return {\n        '&[x-placement*=\"bottom\"] $arrow': {\n            top: 0,\n            left: 0,\n            marginTop: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '0 1em 1em 1em',\n                borderColor: `transparent transparent ${color} transparent`,\n            },\n        },\n        '&[x-placement*=\"top\"] $arrow': {\n            bottom: 0,\n            left: 0,\n            marginBottom: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 0 1em',\n                borderColor: `${color} transparent transparent transparent`,\n            },\n        },\n        '&[x-placement*=\"right\"] $arrow': {\n            left: 0,\n            marginLeft: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 1em 0',\n                borderColor: `transparent ${color} transparent transparent`,\n            },\n        },\n        '&[x-placement*=\"left\"] $arrow': {\n            right: 0,\n            marginRight: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 0 1em 1em',\n                borderColor: `transparent transparent transparent ${color}`,\n            },\n        },\n    };\n}\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        textAlign:'center'\n    },\n    control: {\n        padding: theme.spacing.unit * 2,\n    },\n    button:{\n        marginTop: 20\n    },\n    text:{\n        position:'relative',\n        marginTop:10\n    },\n    error:{\n\n    },\n    arrow: {\n        position: 'absolute',\n        fontSize: 6,\n        width: '3em',\n        height: '3em',\n        '&::before': {\n            content: '\"\"',\n            margin: 'auto',\n            display: 'block',\n            width: 0,\n            height: 0,\n            borderStyle: 'solid',\n        },\n    },\n    bootstrapPopper: arrowGenerator(theme.palette.common.black),\n    bootstrapTooltip: {\n        backgroundColor: theme.palette.common.black,\n    },\n    bootstrapPlacementLeft: {\n        margin: '0 8px',\n    },\n    bootstrapPlacementRight: {\n        margin: '0 8px',\n    },\n    bootstrapPlacementTop: {\n        margin: '8px 0',\n    },\n    bootstrapPlacementBottom: {\n        margin: '8px 0',\n    }\n});\n\n\nclass Login extends Component {\n    constructor(props){\n        super(props);\n\n        this.state ={\n            arrowRef:null,\n            user:{\n              email:'',\n              password:''\n            },\n            formErrors:{\n                email:{\n                    invalid:false,\n                    touched:false,\n                    message:''\n                },\n                password:{\n                    invalid:false,\n                    touched:false,\n                    message:''\n                }\n            }\n        };\n\n    }\n\n    onSubmit = (e)=>{\n        e.preventDefault();\n\n        let valid = true;\n        _.forOwn(this.state.user,(value, key)=>{\n            if(!value.length){\n                //Blank Form\n                let formErrors = {...this.state.formErrors};\n                formErrors[key]['invalid'] = true;\n                formErrors[key]['message'] = 'Required';\n                this.setState({formErrors});\n                valid = false;\n            }else{\n                //Filled Form\n                const filteredErrors = _.filter(this.state.formErrors, (o)=>{\n                    return o.invalid\n                });\n                valid = (!_.size(filteredErrors));\n            }\n        });\n        if(valid){\n            let {user} = this.state;\n            console.log(this.props.history)\n            this.props.loginUser(user, this.props.history,openSnackbar);\n        }\n    };\n\n    handleChange = (e)=>{\n        const {name, value} = e.target;\n\n        let formErrors = this.state.formErrors;\n        switch(name){\n            case 'email':\n                formErrors.email.message = emailRegex.test(value) && value.length > 0  ? '':'Invalid Email';\n                formErrors.email.invalid = !!(!emailRegex.test(value) && value.length) ;\n                break;\n            case 'password':\n                formErrors.password.invalid = !value.length;\n                formErrors.password.message = value.length ? '': 'Required';\n                break;\n            default:\n                break;\n\n        }\n\n        let user = this.state.user;\n        user[name] = value;\n\n        this.setState({\n            formErrors, user\n        })\n    };\n\n    handleArrowRef = (node)=>{\n        this.setState({\n            arrowRef:node\n        })\n    };\n\n    onFocusChange = e=>{\n        const {name} = e.target;\n        let formErrors = this.state.formErrors;\n        formErrors[name]['touched'] = true;\n        this.setState({\n            formErrors\n        })\n    };\n    onBlurChange = e=>{\n        const {name} = e.target;\n        let formErrors = this.state.formErrors;\n        formErrors[name]['touched'] = false;\n        this.setState({\n            formErrors\n        })\n    };\n\n    componentDidMount() {\n        if(this.props.auth.isAuthenticated){\n            this.props.history.push('/feed')\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { formErrors } = this.state;\n        const { user } = this.props.auth;\n        return (\n                <div className={classes.root}>\n                    <Grid container spacing={0}>\n                        <Grid item xs={12} sm={4}>\n\n                        </Grid>\n                        <Grid item xs={12} sm={4}>\n                            <Typography variant=\"h4\" gutterBottom style={{marginTop:20}}>\n                                Login\n                            </Typography>\n                            <Button href=\"/api/auth/google\" variant=\"contained\" color=\"primary\" fullWidth={true} size='large'>Login with Google</Button>\n                            <form onSubmit={this.onSubmit}>\n\n                                <FormControl className={classes.text} fullWidth >\n                                    <InputLabel htmlFor=\"email\">Email</InputLabel>\n                                    <Input\n                                        id=\"email\"\n                                        className={classes.error}\n                                        name=\"email\"\n                                        value={this.state.user.email}\n                                        onChange={this.handleChange}\n                                        onFocus={this.onFocusChange}\n                                        onBlur={this.onBlurChange}\n                                        error={formErrors.email.invalid}\n                                        noValidate\n                                    />\n                                    <Tooltip\n                                        classes={{\n                                            popper:classes.bootstrapPopper,\n                                            tooltip:classes.bootstrapTooltip,\n                                            tooltipPlacementRight: classes.bootstrapPlacementRight,\n\n                                        }}\n                                        PoppersProps={{\n                                            popperOptions:{\n                                                modifiers:{\n                                                    arrow:{\n                                                        enabled: Boolean(this.state.arrowRef),\n                                                        element: this.state.arrowRef,\n                                                    }\n                                                }\n                                            }\n                                        }}\n                                        placement=\"right\"\n                                        open={formErrors.email.invalid && formErrors.email.touched}\n                                        disableFocusListener\n                                        disableHoverListener\n                                        disableTouchListener\n                                        title={<React.Fragment><span className={classes.arrow} ref={this.handleArrowRef} />{formErrors.email.message}</React.Fragment>}\n                                        error={formErrors.password.invalid}\n                                    ><i style={{position:'absolute', top:30, right:0}}></i></Tooltip>\n                                </FormControl>\n                                <FormControl  className={classes.text} fullWidth >\n                                    <InputLabel htmlFor=\"password\">Password</InputLabel>\n                                    <Input\n                                        type=\"password\"\n                                        id=\"password\"\n                                        name=\"password\"\n                                        value={this.state.user.password}\n                                        onChange={this.handleChange}\n                                        onFocus={this.onFocusChange}\n                                        onBlur={this.onBlurChange}\n                                        error={formErrors.password.invalid}\n                                    />\n                                    <Tooltip\n                                        classes={{\n                                            popper:classes.bootstrapPopper,\n                                            tooltip:classes.bootstrapTooltip,\n                                            tooltipPlacementRight: classes.bootstrapPlacementRight,\n\n                                        }}\n                                        PoppersProps={{\n                                            popperOptions:{\n                                                modifiers:{\n                                                    arrow:{\n                                                        enabled: Boolean(this.state.arrowRef),\n                                                        element: this.state.arrowRef,\n                                                    }\n                                                }\n                                            }\n                                        }}\n                                        placement=\"right\"\n                                        open={formErrors.password.invalid && formErrors.password.touched}\n                                        disableFocusListener\n                                        disableHoverListener\n                                        disableTouchListener\n                                        title={<React.Fragment><span className={classes.arrow} ref={this.handleArrowRef} />{formErrors.password.message}</React.Fragment>}\n                                    ><i style={{position:'absolute', top:30, right:0}}></i></Tooltip>\n                                </FormControl>\n                                <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth={true} size='large' className={classes.button}>\n                                    Login\n                                </Button>\n                                <Typography variant=\"body2\" style={{marginTop:20}} gutterBottom>\n                                    Don't have an Account? <Link component={RouterLink} to=\"/register\">Sign Up</Link>\n                                </Typography>\n                            </form>\n                        </Grid>\n                        <Grid item xs={12} sm={4}>\n\n                        </Grid>\n                    </Grid>\n                </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state)=>({\n    auth:state.auth,\n    snackbar: state.snackbar\n});\n\nLogin.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\nexport default connect(mapStateToProps, { loginUser })(withStyles(styles)(Login)) ;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Fade from '@material-ui/core/Fade';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link';\nimport { Redirect } from 'react-router-dom'\nimport axios from 'axios';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { connect } from 'react-redux';\nimport { registerUser} from \"../actions/authActions\";\nimport _ from 'lodash';\nimport {openSnackbar} from \"./Notifier\";\n\nconst emailRegex = RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\nconst usernameRegex = /^[a-zA-Z0-9]+$/;\nfunction arrowGenerator(color) {\n    return {\n        '&[x-placement*=\"bottom\"] $arrow': {\n            top: 0,\n            left: 0,\n            marginTop: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '0 1em 1em 1em',\n                borderColor: `transparent transparent ${color} transparent`,\n            },\n        },\n        '&[x-placement*=\"top\"] $arrow': {\n            bottom: 0,\n            left: 0,\n            marginBottom: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 0 1em',\n                borderColor: `${color} transparent transparent transparent`,\n            },\n        },\n        '&[x-placement*=\"right\"] $arrow': {\n            left: 0,\n            marginLeft: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 1em 0',\n                borderColor: `transparent ${color} transparent transparent`,\n            },\n        },\n        '&[x-placement*=\"left\"] $arrow': {\n            right: 0,\n            marginRight: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 0 1em 1em',\n                borderColor: `transparent transparent transparent ${color}`,\n            },\n        },\n    };\n}\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        textAlign:'center'\n    },\n    control: {\n        padding: theme.spacing.unit * 2,\n    },\n    button:{\n        marginTop: 20\n    },\n    text:{\n        marginTop:10\n    },\n    arrow: {\n        position: 'absolute',\n        fontSize: 6,\n        width: '3em',\n        height: '3em',\n        '&::before': {\n            content: '\"\"',\n            margin: 'auto',\n            display: 'block',\n            width: 0,\n            height: 0,\n            borderStyle: 'solid',\n        },\n    },\n    bootstrapPopper: arrowGenerator(theme.palette.common.black),\n    bootstrapTooltip: {\n        backgroundColor: theme.palette.common.black,\n    },\n    bootstrapPlacementLeft: {\n        margin: '0 8px',\n    },\n    bootstrapPlacementRight: {\n        margin: '0 8px',\n    },\n    bootstrapPlacementTop: {\n        margin: '8px 0',\n    },\n    bootstrapPlacementBottom: {\n        margin: '8px 0',\n    }\n});\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            spacing: '16',\n            loading:false,\n            redirect:false,\n            name:'',\n            username:'',\n            email:'',\n            password:'',\n            ConfirmPassword:'',\n            user:{\n                name:'',\n                username:'',\n                email:'',\n                password:'',\n                confirmPassword:''\n            },\n            formErrors:{\n                name:{\n                    invalid:false,\n                    touched:false,\n                    message:''\n                },\n                username:{\n                    invalid:false,\n                    touched:false,\n                    message:''\n                },\n                email:{\n                    invalid:false,\n                    touched:false,\n                    message:''\n                },\n                password:{\n                    invalid:false,\n                    touched:false,\n                    message:''\n                },\n                confirmPassword:{\n                    invalid:false,\n                    touched:false,\n                    message:''\n                }\n            }\n        };\n\n    }\n\n    onFocusChange = e=>{\n        const {name} = e.target;\n        let formErrors = this.state.formErrors;\n        formErrors[name]['touched'] = true;\n        this.setState({\n            formErrors\n        })\n    };\n    onBlurChange = e=>{\n        const {name} = e.target;\n        let formErrors = this.state.formErrors;\n        formErrors[name]['touched'] = false;\n        this.setState({\n            formErrors\n        })\n    };\n\n    handleChange = (e)=> {\n        const {name, value} = e.target;\n        let formErrors = this.state.formErrors;\n        switch (name) {\n            case 'name':\n                formErrors.name.message = value.length < 3 ? 'Minimum 3 Characters required' : '';\n                formErrors.name.invalid = value.length < 3;\n                break;\n            case 'username':\n\n                let usernameMessage  = (value.length < 5 || !usernameRegex.test(value)) ? 'Invalid Username':'';\n                let usernameInvalid = (value.length < 5 || !usernameRegex.test(value));\n\n                formErrors.username.message = usernameMessage;\n                formErrors.username.invalid = usernameInvalid;\n                break;\n            case 'email':\n                formErrors.email.message = emailRegex.test(value) && value.length > 0  ? '':'Invalid Email';\n                formErrors.email.invalid = !emailRegex.test(value) && value.length > 0 ;\n                break;\n            case 'password':\n                let passwordMessage = '';\n                let passwordInvalid;\n                if (value.length < 5) {\n                    passwordMessage = 'Minimum 5 Characters required';\n                    passwordInvalid = true;\n                } else if (value !== this.state.user.confirmPassword) {\n                    passwordMessage = 'Password do not match';\n                    passwordInvalid = true;\n                } else {\n                    passwordMessage = '';\n                    passwordInvalid = false;\n                    formErrors.confirmPassword.message = passwordMessage;\n                    formErrors.confirmPassword.invalid = passwordInvalid;\n                }\n                formErrors.password.message = passwordMessage;\n                formErrors.password.invalid = passwordInvalid;\n                break;\n            case 'confirmPassword':\n                let confirmMessage = '';\n                let confirmInvalid = false;\n                if(value.length < 5){\n                    confirmMessage = 'Minimum 5 Characters required' ;\n                    confirmInvalid = true;\n                }else if(value !== this.state.user.password){\n                    confirmMessage = 'Password do not match';\n                    confirmInvalid = true;\n                }else{\n                    confirmMessage = '';\n                    confirmInvalid = false;\n                    formErrors.password.message = confirmMessage;\n                    formErrors.password.invalid = confirmInvalid;\n                }\n                formErrors.confirmPassword.message = confirmMessage;\n                formErrors.confirmPassword.invalid = confirmInvalid;\n                break;\n            default:\n                break;\n\n        }\n        let user = this.state.user;\n        user[name] = value;\n        this.setState({\n            formErrors,\n            user\n        },()=>{\n        })\n    };\n    componentDidMount() {\n\n    };\n\n\n    onSubmit = (e)=>{\n        e.preventDefault();\n        let valid = true;\n\n        _.forOwn(this.state.user, (value, key)=>{\n            if(!value.length){\n                //Blank Form\n                let formErrors = {...this.state.formErrors};\n                formErrors[key]['invalid'] = true;\n                formErrors[key]['message'] = 'Required';\n                this.setState({formErrors});\n                valid = false;\n            }else{\n                //Filled Form\n                const filteredErrors = _.filter(this.state.formErrors, (o)=>{\n                    return o.invalid\n                });\n                valid = (!_.size(filteredErrors));\n            }\n\n        });\n        if(valid){\n\n            let newUser = {name:this.state.user.name, username:this.state.user.username, email:this.state.user.email, password:this.state.user.password};\n            this.props.registerUser(newUser, this.props.history, openSnackbar);\n\n        }\n\n    };\n\n    componentDidMount() {\n        if(this.props.auth.isAuthenticated){\n            this.props.history.push('/feed')\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { formErrors } = this.state;\n        const { user } = this.props.auth;\n        return (\n            <div className={classes.root}>\n                <Grid container spacing={0}>\n                    <Grid item  xs={12} sm={4}>\n\n                    </Grid>\n                    <Grid item  xs={12} sm={4}>\n                        <Typography variant=\"h4\" gutterBottom style={{marginTop:20}}>\n                            Register {user?user.name:''}\n                        </Typography>\n                        <Fade in={this.state.loading}>\n                            <LinearProgress  color=\"secondary\" />\n                        </Fade>\n\n                        <form onSubmit={this.onSubmit}>\n                            <FormControl  className={classes.text} fullWidth >\n                                <InputLabel htmlFor=\"name\">Name</InputLabel>\n                                <Input\n                                    id=\"name\"\n                                    className={classes.error}\n                                    name=\"name\"\n                                    value={this.state.user.name}\n                                    onChange={this.handleChange}\n                                    onFocus={this.onFocusChange}\n                                    onBlur={this.onBlurChange}\n                                    error={formErrors.name.invalid}\n                                    noValidate\n                                />\n                                <Tooltip\n                                    classes={{\n                                        popper:classes.bootstrapPopper,\n                                        tooltip:classes.bootstrapTooltip,\n                                        tooltipPlacementRight: classes.bootstrapPlacementRight,\n\n                                    }}\n                                    PoppersProps={{\n                                        popperOptions:{\n                                            modifiers:{\n                                                arrow:{\n                                                    enabled: Boolean(this.state.arrowRef),\n                                                    element: this.state.arrowRef,\n                                                }\n                                            }\n                                        }\n                                    }}\n                                    placement=\"right\"\n                                    open={formErrors.name.invalid && formErrors.name.touched}\n                                    disableFocusListener\n                                    disableHoverListener\n                                    disableTouchListener\n                                    title={<React.Fragment><span className={classes.arrow} ref={this.handleArrowRef} />{formErrors.name.message}</React.Fragment>}\n                                    error={formErrors.password.invalid}\n                                ><i style={{position:'absolute', top:30, right:0}}></i></Tooltip>\n                            </FormControl>\n                            <FormControl className={classes.text} fullWidth >\n                                <InputLabel htmlFor=\"username\">Username</InputLabel>\n                                <Input\n                                    id=\"username\"\n                                    className={classes.error}\n                                    name=\"username\"\n                                    value={this.state.user.username}\n                                    onChange={this.handleChange}\n                                    onFocus={this.onFocusChange}\n                                    onBlur={this.onBlurChange}\n                                    error={formErrors.username.invalid}\n                                    noValidate\n                                />\n                                <Tooltip\n                                    classes={{\n                                        popper:classes.bootstrapPopper,\n                                        tooltip:classes.bootstrapTooltip,\n                                        tooltipPlacementRight: classes.bootstrapPlacementRight,\n\n                                    }}\n                                    PoppersProps={{\n                                        popperOptions:{\n                                            modifiers:{\n                                                arrow:{\n                                                    enabled: Boolean(this.state.arrowRef),\n                                                    element: this.state.arrowRef,\n                                                }\n                                            }\n                                        }\n                                    }}\n                                    placement=\"right\"\n                                    open={formErrors.username.invalid && formErrors.username.touched}\n                                    disableFocusListener\n                                    disableHoverListener\n                                    disableTouchListener\n                                    title={<React.Fragment><span className={classes.arrow} ref={this.handleArrowRef} />{formErrors.username.message}</React.Fragment>}\n                                    error={formErrors.username.invalid}\n                                ><i style={{position:'absolute', top:30, right:0}}></i></Tooltip>\n                            </FormControl>\n                            <FormControl className={classes.text} fullWidth >\n                                <InputLabel htmlFor=\"email\">Email</InputLabel>\n                                <Input\n                                    id=\"email\"\n                                    className={classes.error}\n                                    name=\"email\"\n                                    value={this.state.user.email}\n                                    onChange={this.handleChange}\n                                    onFocus={this.onFocusChange}\n                                    onBlur={this.onBlurChange}\n                                    error={formErrors.email.invalid}\n                                    noValidate\n                                />\n                                <Tooltip\n                                    classes={{\n                                        popper:classes.bootstrapPopper,\n                                        tooltip:classes.bootstrapTooltip,\n                                        tooltipPlacementRight: classes.bootstrapPlacementRight,\n\n                                    }}\n                                    PoppersProps={{\n                                        popperOptions:{\n                                            modifiers:{\n                                                arrow:{\n                                                    enabled: Boolean(this.state.arrowRef),\n                                                    element: this.state.arrowRef,\n                                                }\n                                            }\n                                        }\n                                    }}\n                                    placement=\"right\"\n                                    open={formErrors.email.invalid && formErrors.email.touched}\n                                    disableFocusListener\n                                    disableHoverListener\n                                    disableTouchListener\n                                    title={<React.Fragment><span className={classes.arrow} ref={this.handleArrowRef} />{formErrors.email.message}</React.Fragment>}\n                                    error={formErrors.email.invalid}\n                                ><i style={{position:'absolute', top:30, right:0}}></i></Tooltip>\n                            </FormControl>\n                            <FormControl  className={classes.text} fullWidth >\n                                <InputLabel htmlFor=\"password\">Password</InputLabel>\n                                <Input\n                                    id=\"password\"\n                                    className={classes.error}\n                                    name=\"password\"\n                                    type=\"password\"\n                                    value={this.state.user.password}\n                                    onChange={this.handleChange}\n                                    onFocus={this.onFocusChange}\n                                    onBlur={this.onBlurChange}\n                                    error={formErrors.password.invalid}\n                                    noValidate\n                                />\n                                <Tooltip\n                                    classes={{\n                                        popper:classes.bootstrapPopper,\n                                        tooltip:classes.bootstrapTooltip,\n                                        tooltipPlacementRight: classes.bootstrapPlacementRight,\n\n                                    }}\n                                    PoppersProps={{\n                                        popperOptions:{\n                                            modifiers:{\n                                                arrow:{\n                                                    enabled: Boolean(this.state.arrowRef),\n                                                    element: this.state.arrowRef,\n                                                }\n                                            }\n                                        }\n                                    }}\n                                    placement=\"right\"\n                                    open={formErrors.password.invalid && formErrors.password.touched}\n                                    disableFocusListener\n                                    disableHoverListener\n                                    disableTouchListener\n                                    title={<React.Fragment><span className={classes.arrow} ref={this.handleArrowRef} />{formErrors.password.message}</React.Fragment>}\n                                    error={formErrors.password.invalid}\n                                ><i style={{position:'absolute', top:30, right:0}}></i></Tooltip>\n\n                            </FormControl>\n                            <FormControl  className={classes.text} fullWidth >\n                                <InputLabel htmlFor=\"confirmPassword\">Confirm Password</InputLabel>\n                                <Input\n                                    id=\"confirmPassword\"\n                                    className={classes.error}\n                                    name=\"confirmPassword\"\n                                    type=\"password\"\n                                    value={this.state.user.confirmPassword}\n                                    onChange={this.handleChange}\n                                    onFocus={this.onFocusChange}\n                                    onBlur={this.onBlurChange}\n                                    error={formErrors.confirmPassword.invalid}\n                                    noValidate\n                                />\n                                <Tooltip\n                                    classes={{\n                                        popper:classes.bootstrapPopper,\n                                        tooltip:classes.bootstrapTooltip,\n                                        tooltipPlacementRight: classes.bootstrapPlacementRight,\n\n                                    }}\n                                    PoppersProps={{\n                                        popperOptions:{\n                                            modifiers:{\n                                                arrow:{\n                                                    enabled: Boolean(this.state.arrowRef),\n                                                    element: this.state.arrowRef,\n                                                }\n                                            }\n                                        }\n                                    }}\n                                    placement=\"right\"\n                                    open={formErrors.confirmPassword.invalid && formErrors.confirmPassword.touched}\n                                    disableFocusListener\n                                    disableHoverListener\n                                    disableTouchListener\n                                    title={<React.Fragment><span className={classes.arrow} ref={this.handleArrowRef} />{formErrors.confirmPassword.message}</React.Fragment>}\n                                    error={formErrors.confirmPassword.invalid}\n                                ><i style={{position:'absolute', top:30, right:0}}></i></Tooltip>\n\n                            </FormControl>\n                            <Button type=\"submit\" variant=\"contained\" color=\"primary\"  fullWidth={true} size='large' className={classes.button}>\n                                Register\n                            </Button>\n                            <Typography variant=\"body2\" gutterBottom style={{marginTop:20}} >\n                                Already have an Account? <Link component={RouterLink} to=\"/login\">Sign In</Link>\n                            </Typography>\n                        </form>\n                    </Grid>\n                    <Grid item  xs={12} sm={4}>\n\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state)=>({\n    auth:state.auth,\n    snackbar: state.snackbar\n});\nRegister.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\nexport default connect(mapStateToProps, { registerUser })(withStyles(styles)(Register));","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport SendIcon from '@material-ui/icons/Send';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        maxWidth: 360,\n        position:'sticky',\n        top:0,\n        backgroundColor: theme.palette.background.paper,\n    },\n    nested: {\n        paddingLeft: theme.spacing.unit * 4,\n    },\n});\n\nclass NavNewsFeed extends React.Component {\n    state = {\n        open: true,\n    };\n\n    handleClick = () => {\n        this.setState(state => ({ open: !state.open }));\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <List\n                component=\"nav\"\n                subheader={<ListSubheader component=\"div\">Nested List Items</ListSubheader>}\n                className={classes.root}\n            >\n                <ListItem button>\n                    <ListItemIcon>\n                        <SendIcon />\n                    </ListItemIcon>\n                    <ListItemText inset primary=\"Sent mail\" />\n                </ListItem>\n                <ListItem button>\n                    <ListItemIcon>\n                        <DraftsIcon />\n                    </ListItemIcon>\n                    <ListItemText inset primary=\"Drafts\" />\n                </ListItem>\n                <ListItem button onClick={this.handleClick}>\n                    <ListItemIcon>\n                        <InboxIcon />\n                    </ListItemIcon>\n                    <ListItemText inset primary=\"Inbox\" />\n                    {this.state.open ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={this.state.open} timeout=\"auto\" unmountOnExit>\n                    <List component=\"div\" disablePadding>\n                        <ListItem button className={classes.nested}>\n                            <ListItemIcon>\n                                <StarBorder />\n                            </ListItemIcon>\n                            <ListItemText inset primary=\"Starred\" />\n                        </ListItem>\n                    </List>\n                </Collapse>\n            </List>\n        );\n    }\n}\n\nNavNewsFeed.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(NavNewsFeed);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport {ListItemSecondaryAction} from \"@material-ui/core\";\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Button from \"@material-ui/core/Button\";\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\nimport FormatUnderlinedIcon from '@material-ui/icons/FormatUnderlined';\nimport FormatColorFillIcon from '@material-ui/icons/FormatColorFill';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\nconst styles = theme => ({\n    root: {\n        position:'sticky',\n        top:0,\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n        display: 'inline',\n    },\n});\n\nclass FollowMe extends React.Component {\n    state = {\n        alignment: 'left',\n        formats: ['bold'],\n    };\n\n    render(){\n        const { classes } = this.props;\n        const { alignment, formats } = this.state;\n        return (\n            <List className={classes.root}>\n                <ListItem alignItems=\"flex-start\">\n                    <ListItemAvatar>\n                        <Avatar alt=\"Remy Sharp\" src=\"https://material-ui.com/static/images/avatar/1.jpg\" />\n                    </ListItemAvatar>\n                    <ListItemText\n                        primary=\"Pradeep\"\n                    />\n\n                    <ListItemSecondaryAction>\n                        <ToggleButtonGroup value={formats} onChange={this.handleFormat}>\n                            <ToggleButton size=\"small\" value=\"bold\" style={{fontSize:10}}>\n                                Follow\n                            </ToggleButton>\n                            <ToggleButton value=\"italic\" >\n                                <CloseIcon style={{padding:0}}/>\n                            </ToggleButton>\n\n                        </ToggleButtonGroup>\n                    </ListItemSecondaryAction>\n                </ListItem>\n                <ListItem alignItems=\"flex-start\">\n                    <ListItemAvatar>\n                        <Avatar alt=\"Remy Sharp\" src=\"https://material-ui.com/static/images/avatar/2.jpg\" />\n                    </ListItemAvatar>\n                    <ListItemText\n                        primary=\"Summer BBQ\"\n                    />\n                    <ListItemSecondaryAction>\n                        <ToggleButtonGroup value={formats} onChange={this.handleFormat}>\n                            <ToggleButton size=\"small\" value=\"bold\" style={{fontSize:10}}>\n                                Follow\n                            </ToggleButton>\n                            <ToggleButton value=\"italic\" >\n                                <CloseIcon style={{padding:0}}/>\n                            </ToggleButton>\n\n                        </ToggleButtonGroup>\n                    </ListItemSecondaryAction>\n                </ListItem>\n                <ListItem alignItems=\"flex-start\">\n                    <ListItemAvatar>\n                        <Avatar alt=\"Remy Sharp\" src=\"https://material-ui.com/static/images/avatar/3.jpg\" />\n                    </ListItemAvatar>\n                    <ListItemText\n                        primary=\"Oui Oui\"\n                    />\n                    <ListItemSecondaryAction>\n                        <ToggleButtonGroup value={formats} onChange={this.handleFormat}>\n                            <ToggleButton size=\"small\" value=\"bold\" style={{fontSize:10}}>\n                                Follow\n                            </ToggleButton>\n                            <ToggleButton value=\"italic\" >\n                                <CloseIcon style={{padding:0}}/>\n                            </ToggleButton>\n\n                        </ToggleButtonGroup>\n                    </ListItemSecondaryAction>\n                </ListItem>\n            </List>\n        );\n    }\n\n}\n\nFollowMe.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(FollowMe);\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport Icon from \"@material-ui/core/Icon\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing.unit,\n    },\n    leftIcon: {\n        marginRight: theme.spacing.unit,\n    },\n    rightIcon: {\n        marginLeft: theme.spacing.unit,\n    },\n    iconSmall: {\n        fontSize: 20,\n    },\n});\n\nclass CreatePost extends Component {\n    constructor(props){\n        super(props)\n\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <form>\n\n                <TextField id=\"time\" multiline={true} placeholder='Click here to share and update....'  style={{width:'100%'}}  rows={2}\n                           rowsMax={4} />\n                <Grid container>\n                    <Grid item xs={7}></Grid>\n                    <Grid item xs={5}>\n                        <svg style={{width:40, height:40,float:'left', marginTop:20, marginRight:10}} viewBox=\"0 0 24 24\">\n                            <path fill=\"#3f51b5\" d=\"M5,3A2,2 0 0,0 3,5V19A2,2 0 0,0 5,21H14.09C14.03,20.67 14,20.34 14,20C14,19.32 14.12,18.64 14.35,18H5L8.5,13.5L11,16.5L14.5,12L16.73,14.97C17.7,14.34 18.84,14 20,14C20.34,14 20.67,14.03 21,14.09V5C21,3.89 20.1,3 19,3H5M19,16V19H16V21H19V24H21V21H24V19H21V16H19Z\" />\n                        </svg>\n                        <Button type=\"submit\" color=\"primary\"  variant=\"contained\" size='large'  style={{ float:'left', margin:0,marginTop:20}}  className={classes.button} >\n                            Share\n                            <Icon className={classes.rightIcon}>send</Icon>\n                        </Button>\n                    </Grid>\n                </Grid>\n\n            </form>\n        );\n    }\n}\n\nCreatePost.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CreatePost);","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from \"@material-ui/core/Typography\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst styles = {\n    avatar: {\n        margin: 10,\n        width: 50,\n        height: 50,\n    },\n    bigAvatar: {\n        margin: 10,\n        width: 90,\n        height: 90,\n    },\n};\nconst options = [\n    'None',\n    'Atria',\n    'Callisto',\n];\nconst ITEM_HEIGHT = 48;\nclass PostHeader extends Component {\n    state = {\n        anchorEl: null,\n    };\n    handleClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n    render() {\n        const { anchorEl } = this.state;\n        const open = Boolean(anchorEl);\n        const { classes } = this.props;\n        return (\n            <div>\n                <Grid container>\n                    <Grid item xs={2}><Avatar alt=\"Remy Sharp\" src=\"http://mythemestore.com/friend-finder/images/users/user-4.jpg\" className={classes.avatar} /></Grid>\n                    <Grid item xs={8}>\n                        <Typography variant=\"h6\" gutterBottom style={{marginTop:10, marginBottom:0}}>\n                            Pradeep\n                        </Typography>\n                        <Typography variant=\"caption\" gutterBottom>3 hrs</Typography>\n                    </Grid>\n                    <Grid item xs={2}>\n                        <IconButton\n                            aria-label=\"More\"\n                            aria-owns={open ? 'long-menu' : undefined}\n                            aria-haspopup=\"true\"\n                            onClick={this.handleClick}\n                            style={{float:'right', marginTop:8}}\n                        >\n                            <MoreVertIcon />\n                        </IconButton>\n                        <Menu\n                            id=\"long-menu\"\n                            anchorEl={anchorEl}\n                            open={open}\n                            onClose={this.handleClose}\n                            PaperProps={{\n                                style: {\n                                    maxHeight: ITEM_HEIGHT * 4.5,\n                                    width: 200,\n                                },\n                            }}\n                        >\n                            {options.map(option => (\n                                <MenuItem key={option} selected={option === 'Pyxis'} onClick={this.handleClose}>\n                                    {option}\n                                </MenuItem>\n                            ))}\n                        </Menu>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nPostHeader.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(PostHeader);","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from '@material-ui/core/Avatar';\nimport {withStyles} from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = {\n    avatar: {\n        margin: 10,\n        width: 50,\n        height: 50,\n        marginTop:0\n    },\n    bigAvatar: {\n        margin: 10,\n        width: 90,\n        height: 90,\n    },\n};\n\nclass Comment extends Component {\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div>\n                <Grid container style={{padding:0}}>\n                    <Grid item xs={2}><Avatar alt=\"Remy Sharp\" src=\"http://mythemestore.com/friend-finder/images/users/user-4.jpg\" className={classes.avatar} /></Grid>\n                    <Grid item xs={10} style={{paddingRight:10}}>\n                        <TextField\n                        id=\"standard-name\"\n                        placeholder=\"Write a comment...\"\n                        className=\"{}\"\n                        style={{width:'100%', marginTop:10}}\n                        value=\"\"\n                        margin=\"normal\"\n                    />\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid item xs={2}><Avatar alt=\"Remy Sharp\" src=\"http://mythemestore.com/friend-finder/images/users/user-4.jpg\" className={classes.avatar} /></Grid>\n                    <Grid item xs={10}>\n                        <Typography variant=\"body2\" gutterBottom>\n                            Thank you for this. A suggestion if I may - other people's health (physical and mental) is not my responsibility either unless I'm a certified medical care provider who is treating them.\n                        </Typography>\n                       </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nComment.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Comment);","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport PostHeader from \"./PostHeader\";\nimport {withStyles} from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Comment from \"./Comment\";\n\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1\n    },\n    linedivider: {\n        background: 'none',\n        height: '1px',\n        borderTop: '1px solid #e6e6e6',\n        width: '100%',\n        margin: 'auto',\n        marginBottom: '10px'\n    },\n    postContent :{\n        background: '#f8f8f8',\n        borderRadius: 4,\n        width: '100%',\n        border: '1px solid #f1f2f2',\n        marginBottom: 20,\n        overflow: 'hidden',\n        position: 'relative'\n    }   ,\n    postContainer:{\n        padding:20\n    },\n\n    post:{\n        img:{\n            width:'100%'\n        }\n    },\n\n});\n\nclass Post extends Component {\n    render() {\n        const { classes } = this.props;\n        return (\n            <div>\n                <div className={classes.postContent} style={{marginTop:20}}>\n                    <PostHeader/>\n                    <img style={{width:'100%'}} alt='post' src={'http://mythemestore.com/friend-finder/images/post-images/1.jpg'} />\n                    <div className={classes.postContainer}>\n                        Hello\n                    </div>\n                    <Grid container spacing={0} style={{paddingLeft:15, paddingRight:15}}>\n                    <Grid item xs={2}>\n                    <svg style={{width:24, height:24, marginBottom:10, marginRight:10}} viewBox=\"0 0 24 24\">\n                    <path fill=\"#3f51b5\" d=\"M5,9V21H1V9H5M9,21A2,2 0 0,1 7,19V9C7,8.45 7.22,7.95 7.59,7.59L14.17,1L15.23,2.06C15.5,2.33 15.67,2.7 15.67,3.11L15.64,3.43L14.69,8H21C22.11,8 23,8.9 23,10V12C23,12.26 22.95,12.5 22.86,12.73L19.84,19.78C19.54,20.5 18.83,21 18,21H9M9,19H18.03L21,12V10H12.21L13.34,4.68L9,9.03V19Z\" />\n                    </svg>\n\n                    <svg style={{width:24, height:24, marginBottom:10}} viewBox=\"0 0 24 24\">\n                    <path fill=\"#3f51b5\" d=\"M21,11L14,4V8C7,9 4,14 3,19C5.5,15.5 9,13.9 14,13.9V18L21,11Z\" />\n                    </svg>\n\n                    {/*<svg style={{width:24, height:24}} viewBox=\"0 0 24 24\">*/}\n                    {/*<path fill=\"#3f51b5\" d=\"M23,10C23,8.89 22.1,8 21,8H14.68L15.64,3.43C15.66,3.33 15.67,3.22 15.67,3.11C15.67,2.7 15.5,2.32 15.23,2.05L14.17,1L7.59,7.58C7.22,7.95 7,8.45 7,9V19A2,2 0 0,0 9,21H18C18.83,21 19.54,20.5 19.84,19.78L22.86,12.73C22.95,12.5 23,12.26 23,12V10M1,21H5V9H1V21Z\" />*/}\n                    {/*</svg>*/}\n\n                    </Grid>\n                    <Grid item xs={2}>\n\n\n                    </Grid>\n                    <Grid item xs={4}></Grid>\n                    </Grid>\n                    <div className={classes.linedivider}></div>\n                    <Comment/>\n                </div>\n            </div>\n        );\n    }\n}\n\nPost.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Post);\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport NavNewsFeed from \"./NavNewsFeed\";\nimport FollowMe from \"./FollowMe\";\nimport CreatePost from \"./CreatePost\";\nimport Post from \"./Post\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport { connect } from 'react-redux';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1\n    },\n    layout:{\n    [theme.breakpoints.up(900+theme.spacing.unit * 3 * 2)]:{\n        width:1050,\n        marginLeft:'auto',\n        marginRight:'auto'\n    }\n    },\n    linedivider: {\n        background: 'none',\n        height: '1px',\n        borderTop: '1px solid #e6e6e6',\n        width: '100%',\n        margin: 'auto',\n        marginBottom: '10px'\n   },\n    postContent :{\n        background: '#f8f8f8',\n        borderRadius: 4,\n        width: '100%',\n        border: '1px solid #f1f2f2',\n        marginBottom: 20,\n        overflow: 'hidden',\n        position: 'relative'\n    }   ,\n        postContainer:{\n            padding:20\n        },\n    paper: {\n    },\n    post:{\n        img:{\n            width:'100%'\n        }\n    },\n    control: {\n        padding: theme.spacing.unit * 2,\n    },\n});\n\nclass Feed extends Component {\n    componentDidMount() {\n        if(!this.props.auth.isAuthenticated){\n            this.props.history.push('/login')\n        }\n    }\n    render() {\n        const { classes } = this.props;\n        return (\n            <main className={classes.layout} style={{marginTop:20}}>\n                <Grid container  className={classes.root} spacing={24}>\n                    <Hidden only=\"xs\">\n                        <Grid item xs={12} sm={2} >\n                            <NavNewsFeed/>\n                        </Grid>\n                    </Hidden>\n\n                    <Grid item xs={12} sm={6}>\n\n                        <CreatePost/>\n                        <Post/>\n                        <Post/>\n                        <Post/>\n                        <Post/>\n                        <Post/>\n                        <Post/>\n                    </Grid>\n                    <Hidden only=\"xs\">\n                        <Grid item xs={12} sm={4}>\n                            <FollowMe/>\n                        </Grid>\n                    </Hidden>\n\n                </Grid>\n            </main>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state)=>({\n    auth:state.auth,\n    snackbar: state.snackbar\n});\n\nFeed.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(Feed));","import React, {Component} from 'react';\n\nclass Welcome extends Component {\n    render() {\n        return (\n            <div>\n                <h2>Welcome</h2>\n            </div>\n        );\n    }\n}\n\nexport default Welcome;","import { SET_CURRENT_USER } from '../actions/types';\nimport _ from 'lodash'\n\nconst initialState = {\n    isAuthenticated:false,\n    user:{}\n};\n\n\nexport default function(state = initialState, action){\n    switch (action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: !_.isEmpty(action.payload),\n                user:action.payload\n            };\n        default:\n            return state;\n    }\n}","import { OPEN_SNACKBAR } from '../actions/types'\nconst initialState = {\n    success:false,\n    message:''\n};\n\n\nexport default function(state = initialState, action){\n    switch (action.type) {\n        case OPEN_SNACKBAR:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport  authReducer  from './authReducer';\nimport snackbarReducer from './snackbarReducer'\n\nexport default combineReducers({\n    auth:authReducer,\n    snackbar:snackbarReducer\n});","\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    ) );\n\nexport default store;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport logo from './logo.svg';\nimport './App.css';\nimport NavBar from \"./components/NavBar\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Notifier from \"./components/Notifier\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport Feed from \"./components/Feed\";\nimport Welcome from \"./components/Welcome\";\n\nimport store from './store';\nimport { setCurrentUser } from './actions/authActions'\n\nif(localStorage.token){\n    store.dispatch(setCurrentUser(localStorage.user))\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n          <Provider store={store}>\n              <Router>\n                  <NavBar/>\n                  {/*<Login/>*/}\n                  {/*<Register/>*/}\n                  <Route exact path=\"/\" component={Welcome} />\n                  <Route exact path=\"/login\" component={Login} />\n                  <Route exact path=\"/register\" component={Register} />\n                  <Route exact path=\"/feed\" component={Feed} />\n              </Router>\n\n              <Notifier/>\n          </Provider>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}